name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Setup Bun.js
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install npm dependencies (bun)
        run: bun install

      - name: Cache npm dependencies
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Get Version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun release
          commit: 'chore(release): version package v${{ steps.get-version.outputs.version }}'
          title: 'chore(release): version package v${{ steps.get-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release Status
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "ðŸŽ‰ Published version ${{ steps.get-version.outputs.version }}"
