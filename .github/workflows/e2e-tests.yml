name: E2E Test with Maestro

on:
    workflow_run:
        workflows: ['Generate Packages']
        types:
            - completed
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test-android:
        name: Android E2E Test
        runs-on: ubuntu-latest

        strategy:
            matrix:
                package-type: ['module', 'view']
                mode: ['Release']
                pm: ['bun']

        env:
            WORKING_DIR: ${{ github.workspace }}/react-native-test-${{ matrix.package-type }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Enable KVM (Android emulator)
              if: runner.os == 'Linux'
              run: |
                  echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
                  sudo udevadm control --reload-rules
                  sudo udevadm trigger --name-match=kvm

            - name: Create working directory
              run: mkdir -p ${{ env.WORKING_DIR }}

            - name: Download generated module
              uses: actions/download-artifact@v4
              with:
                  name: test-${{ matrix.package-type }}-${{ matrix.pm }}
                  path: ${{ env.WORKING_DIR }}
                  run-id: ${{ github.event.workflow_run.id }}
                  github-token: ${{ github.token }}

            - name: List package structure
              working-directory: ${{ env.WORKING_DIR }}
              run: find . -type f | head -30

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-bun-

            - name: Install dependencies
              working-directory: ${{ env.WORKING_DIR }}
              run: ${{ matrix.pm }} install

            - name: Run codegen and build
              working-directory: ${{ env.WORKING_DIR }}
              run: |
                  bunx nitro-codegen --logLevel="debug"
                  ${{ matrix.pm }} run build
                  node post-script.js

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: 'zulu'
                  java-version: '17'
                  cache: 'gradle'

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Install Maestro CLI
              uses: ./.github/actions/setup-maestro

            - name: Run Android Emulator and E2E Tests
              uses: reactivecircus/android-emulator-runner@v2
              with:
                  api-level: 35
                  target: google_apis
                  arch: x86_64
                  profile: Galaxy Nexus
                  emulator-options: -no-snapshot -memory 4096 -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                  disable-animations: true
                  script: |
                      # Wait for system to settle
                      adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

                      # Retry once if necessary
                      ${{ matrix.pm }} android:e2e ${{ env.WORKING_DIR }}/example ${{ matrix.package-type }}

    test-ios:
        name: iOS E2E Test
        runs-on: macos-latest
        strategy:
            matrix:
                package-type: ['module', 'view']
                mode: ['Release']
                pm: ['bun']
        env:
            MAESTRO_DRIVER_STARTUP_TIMEOUT: 300_000 # 5 minutes
            MAESTRO_CLI_ANALYSIS_NOTIFICATION_DISABLED: true
            WORKING_DIR: ${{ github.workspace }}/react-native-test-${{ matrix.package-type }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Create working directory
              run: mkdir -p ${{ env.WORKING_DIR }}

            - name: Download generated module
              uses: actions/download-artifact@v4
              with:
                  name: test-${{ matrix.package-type }}-${{ matrix.pm }}
                  path: ${{ env.WORKING_DIR }}
                  run-id: ${{ github.event.workflow_run.id }}
                  github-token: ${{ github.token }}

            - name: List package structure
              working-directory: ${{ env.WORKING_DIR }}
              run: find . -type f | head -30

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-bun-

            - name: Install Dependencies
              working-directory: ${{ env.WORKING_DIR }}
              run: ${{ matrix.pm }} install

            - name: Run codegen and build
              working-directory: ${{ env.WORKING_DIR }}
              run: |
                  bunx nitro-codegen --logLevel="debug"
                  ${{ matrix.pm }} run build
                  node post-script.js

            - name: Install Maestro CLI
              uses: ./.github/actions/setup-maestro

            - name: Run tests
              run: |
                  ${{ matrix.pm }} ios:e2e ${{ env.WORKING_DIR }}/example ${{ matrix.package-type }}

            - name: Upload test artifacts
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: maestro-artifacts-ios-${{ matrix.package-type }}
                  path: e2e-artifacts
                  include-hidden-files: true
